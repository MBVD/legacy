%include "io64.inc"

section .data
    mem_size dq 10 ; Размер памяти, которую мы хотим выделить (в данном случае, 10 quadword)

section .text
global main

main:
    mov rbp, rsp  ; for correct debugging   
    mov rdi, 0         ; Адрес начала выделенной памяти (0, чтобы ядро само выбрало адрес)
    mov rsi, mem_size  ; Размер выделяемой памяти
    mov rdx, 7         ; Флаги (7 для чтения/записи/исполнения)
    mov r10, 22h       ; Флаги доступа (22h для MAP_PRIVATE | MAP_ANONYMOUS)
    xor r8, r8         ; Файловый дескриптор (в данном случае, не используется)
    xor r9, r9         ; Смещение в файле (в данном случае, не используется)

    ; Вызываем системный вызов для выделения памяти
    mov rax, 9         ; Системный вызов sys_mmap (9 для 64-битных систем)
    syscall            ; Вызов системного вызова

    ; Проверяем результат системного вызова
    cmp rax, -1        ; Проверяем, что rax не содержит -1 (ошибка)
    je mmap_failed     ; Если произошла ошибка, переходим к обработчику ошибки

    ; Если sys_mmap выполнен успешно, адрес начала выделенной памяти будет в регистре RAX
    ; Здесь можно продолжить работу с выделенной памятью
    ; Например, можно сохранить в памяти данные или скопировать туда код

    ; Размещаем значения в выделенной памяти
    xor rcx, rcx
for_loop:
    cmp rcx, 10
    jge end_for
    mov [rax + rcx * 8], rcx
    inc rcx
    jmp for_loop
end_for:

    ; Выводим значения из выделенной памяти
    xor rcx, rcx
print_loop:
    cmp rcx, 10
    jge end_print
    PRINT_DEC 8, [rax + rcx * 8]
    PRINT_CHAR ' '
    inc rcx
    jmp print_loop
end_print:
    ; Выходим из программы
    mov rax, 60        ; Системный вызов для завершения программы (exit)
    xor edi, edi       ; Код возврата 0 (успешное завершение)
    syscall
    ret                ; Вызов системного вызова
mmap_failed:
    ; Обработка ошибки выделения памяти
    ; Можно добавить здесь соответствующий код обработки ошибки
    ; Например, вывести сообщение об ошибке и завершить программу
    ; Здесь можно использовать функции вывода строки, если они доступны
    mov rax, 60        ; Системный вызов для завершения программы (exit)
    mov edi, 1         ; Код возврата 1 (ошибка)
    syscall            ; Вызов системного вызова
